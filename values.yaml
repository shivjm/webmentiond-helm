# Default values for webmentiond.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- how many instances of webmentiond to run (see note about persistence in README)
replicaCount: 1

image:
  repository: zerok/webmentiond
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# The server configuration
config:
  mail:
    # -- name of secret containing `user` & `password` for mail server
    # (set to "" to disable authentication)
    secretRef: webmentiond

    # -- (string )mail server host (required)
    host:

    # -- port to connect to mail server on (required)
    port: "587"

    # -- whether to disable TLS when connecting to the mail server
    disableTls: false

    # -- (string) address to put in `From:` line of emails sent by server
    # (required)
    from:

  public:
    # -- (string) publicly accessible hostname, e.g.
    # webmentions.example.com (required)
    host:

    # -- (string) publicly accessible path without leading slash, e.g.
    # `admin`
    path:

  auth:
    # -- name of secret containing `secret` key (used to encrypt JWT
    # in admin interface)
    secretRef: "webmentiond-jwt"

    # -- (string) space-separated list of email addresses that can be
    # used to log in (required)
    adminEmails:

    # Note: There is no way to pass the JWT TTL as the command-line
    # argument makes it fail to start

  # -- whether to send email notifications
  sendNotifications: false

  # -- (string) space-separated list of domains for which server
  # accepts Webmentions (required)
  allowedTargetDomains:

prometheus:
  # -- whether to add annotations to scrape Prometheus metrics
  annotations: false

  serviceMonitor:
    # -- whether to create ServiceMonitor from Prometheus Operator
    enabled: false

    # -- namespace to create ServiceMonitor in
    namespace: ""

    # -- labels to apply to ServiceMonitor
    labels: {}

    # -- annotations to apply to ServiceMonitor
    annotations: {}

    # -- (string) how frequently Prometheus should scrape service
    interval:

    # -- (string) time after which scrape is ended
    scrapeTimeout:

    # -- MetricRelabelConfigs to apply to samples before ingestion
    relabelings: []

persistence:
  # -- whether to enable persistence (will use a temporary volume if not)
  enabled: true

  # -- (string) name of existing claim to use (required if persistence
  # is enabled)
  existingClaim:

# -- annotations to add to all pods created
podAnnotations: {}

service:
  # -- whether to create Service
  enabled: true

  # -- type of Service to create
  type: ClusterIP

  # -- port on which Service should listen
  port: 80

# -- security context to apply to all pods created
podSecurityContext:
  fsGroup: 1500
  fsGroupChangePolicy: "OnRootMismatch"

# -- security context to apply to all containers created
securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsUser: 1500

ingress:
  # -- whether to create Traefik IngressRoute using hostname and path
  # set in config.public
  enabled: false

  # -- annotations to add to all ingress resources created
  annotations: {}

  tls:
    # -- (string) name of secret containing TLS details (required if
    # ingress is enabled)
    secretRef:

  # -- custom middleware to add
  middleware: []
    # - name: my-custom-middleware
    # - name: my-custom-middleware-2

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
